// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mongodb"
  url      = env("app.db")
}

generator client {
  provider = "prisma-client-js"
}

model Post {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  slug  String @unique
  title String
  body  String

  categoryIds String[]   @db.ObjectId
  categories  Category[] @relation(fields: [categoryIds], references: [id])
  activities Activity[]


  @@map("posts")
}

model User {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  email         String     @unique
  firstName     String
  lastName      String
  phoneNumber   String
  role          String     @default("USER")
  password      String
  categoriesIds String[]   @db.ObjectId
  categories    Category[] @relation(fields: [categoriesIds], references: [id])
  activities    Activity[]

  @@map("users")
}


model Activity {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  
  userId    String @db.ObjectId
  user      User    @relation(fields: [userId], references: [id])
  postId    String @db.ObjectId
  post      Post    @relation(fields: [postId], references: [id])
  actionType    String
  isActive Boolean @default(true)


  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("activities")
}

model Category {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String @unique

  // userIDs String[] @db.ObjectId
  // users   User[]   @relation(fields: [userIDs], references: [id])

  user    User[]   @relation(fields: [userIds], references: [id])
  userIds String[] @db.ObjectId

  post    Post[]   @relation(fields: [postIDs], references: [id])
  postIDs String[] @db.ObjectId

  @@map("categories")
}
